{"py/object": "codegen.mdfgs.Jacobi1D", "_col": 0, "_comps": [], "_constants": [{"py/object": "codegen.setlib.Constant", "_name": "N", "_value": "100000"}, {"py/object": "codegen.setlib.Constant", "_name": "T", "_value": "100000"}], "_dot": {"py/object": "graphviz.dot.Digraph", "_encoding": "utf-8", "body": ["\tgraph [forcelabels=true]", "\tsubgraph cluster0 {", "\t\tcolor=white", "\t\tstyle=filled", "\t\t0 [label=A color=black fillcolor=gray shape=box style=\"filled,solid\" xlabel=\"Domain: {[t,i] : 0 <= t <= T && 0 <= i <= N+1}\\lRange: |R\\lSize: T*(N+2)\\l\"]", "\t}", "\tsubgraph cluster1 {", "\t\tcolor=white", "\t\tstyle=filled", "\t\t1 [label=jacobi1d color=black fillcolor=white shape=invtriangle style=\"filled,solid\" xlabel=\"\\lDomain: {[t,i] : 1 <= t <= T && 1 <= i <= N}\\lStatements: A[t,i] = (A[t-1,i-1] + A[t-1,i] + A[t-1,i+1]) / 3.0\\lReads: A[t-1,i-1], A[t-1,i], A[t-1,i+1]\\lWrites: A[t,i]\\l\"]", "\t}", "\tsubgraph cluster2 {", "\t\tcolor=white", "\t\tstyle=filled", "\t\t2 [label=\"A'\" color=black fillcolor=gray shape=box style=\"filled,solid\" xlabel=\"Domain: {[i] : 0 <= i <= N+1}\\lRange: |R\\lSize: N+2\\l\"]", "\t}", "\t0 -> 1 [label=\"\" color=black style=\"filled,solid\"]", "\t1 -> 2 [label=\"\" color=black style=\"filled,solid\"]"], "comment": null, "edge_attr": {}, "filename": "Digraph.gv", "graph_attr": {}, "name": null, "node_attr": {}, "strict": false}, "_edgelist": [{"py/object": "codegen.graph.Edge", "_attrs": {}, "_directed": true, "_dot": null, "_graph": {"py/id": 0}, "_label": "", "_u": {"py/object": "codegen.graph.DataNode", "_alloc": {"py/reduce": [{"py/type": "codegen.graph.MemAlloc"}, {"py/tuple": [{"py/tuple": [1]}]}, null, null, null]}, "_attrs": {"col": 0, "color": "gray", "row": 0, "shape": "box", "xlabel": "Domain: {[t,i] : 0 <= t <= T && 0 <= i <= N+1}\\lRange: |R\\lSize: T*(N+2)\\l"}, "_defval": "0", "_domain": "{[t,i] : 0 <= t <= T && 0 <= i <= N+1}", "_dot": null, "_graph": {"py/id": 0}, "_label": "A", "_name": "0", "_range": "R", "_set": null, "_size": "T*(N+2)", "_type": "real"}, "_v": {"py/object": "codegen.graph.StmtNode", "_attrs": {"col": 0, "color": "white", "row": 1, "shape": "invtriangle", "xlabel": "\\lDomain: {[t,i] : 1 <= t <= T && 1 <= i <= N}\\lStatements: A[t,i] = (A[t-1,i-1] + A[t-1,i] + A[t-1,i+1]) / 3.0\\lReads: A[t-1,i-1], A[t-1,i], A[t-1,i+1]\\lWrites: A[t,i]\\l"}, "_cond": "", "_datamap": "{[t,i] : 0 <= t <= T && 0 <= i <= N+1}", "_domain": "{[t,i] : 1 <= t <= T && 1 <= i <= N}", "_dot": null, "_graph": {"py/id": 0}, "_label": "jacobi1d", "_name": "1", "_reads": ["A[t-1,i-1]", "A[t-1,i]", "A[t-1,i+1]"], "_set": null, "_statements": ["A[t,i] = (A[t-1,i-1] + A[t-1,i] + A[t-1,i+1]) / 3.0"], "_writes": ["A[t,i]"]}}, {"py/object": "codegen.graph.Edge", "_attrs": {}, "_directed": true, "_dot": null, "_graph": {"py/id": 0}, "_label": "", "_u": {"py/id": 11}, "_v": {"py/object": "codegen.graph.DataNode", "_alloc": {"py/id": 10}, "_attrs": {"col": 0, "color": "gray", "row": 2, "shape": "box", "xlabel": "Domain: {[i] : 0 <= i <= N+1}\\lRange: |R\\lSize: N+2\\l"}, "_defval": "0", "_domain": "{[i] : 0 <= i <= N+1}", "_dot": null, "_graph": {"py/id": 0}, "_label": "A'", "_name": "2", "_range": "R", "_set": null, "_size": "N+2", "_type": "real"}}], "_includes": [], "_name": "jacobi1d", "_ncols": 1, "_nodedict": {"0,0": {"py/id": 9}, "1,0": {"py/id": 11}, "2,0": {"py/id": 16}}, "_nodefac": {"py/object": "codegen.graph.NodeFactory"}, "_nodelist": [{"py/id": 9}, {"py/id": 11}, {"py/id": 16}], "_nrows": 3, "_nx": null, "_params": [], "_parent": null, "_path": "", "_returntype": "void", "_row": 3, "_setfac": {"py/object": "codegen.factory.IEGenFactory", "_constants": {}, "_iegen": {"py/object": "codegen.iegenlib.IEGenLib", "_keywords": ["exists", "union", "intersection", "complement", "compose", "inverse", "domain", "range", "hull", "codegen", "farkas", "forall", "given", "and", "or", "not", "within", "subsetof", "supersetof", "symbolic"], "_omegacode": {}, "_relations": {}, "_sets": {}, "_ufuncs": {}}}, "_subgraphs": [], "_symtable": {"": {"py/id": 15}, "A": {"py/id": 9}, "A'": {"py/id": 16}, "N": {"py/id": 3}, "T": {"py/id": 4}, "jacobi1d": {"py/id": 11}}, "_ufregex": {"py/object": "_sre.SRE_Pattern", "pattern": "\\w+\\("}}